{"version":3,"sources":["constants/actionTypes.js","actions/authActions.js","components/movieheader.js","actions/movieActions.js","components/movielist.js","actions/reviewActions.js","components/movie.js","components/login.js","components/register.js","components/authentication.js","reducers/authReducer.js","reducers/movieReducer.js","stores/store.js","App.js","registerServiceWorker.js","index.js"],"names":["actionTypes","USER_LOGGEDIN","USER_LOGOUT","FETCH_MOVIES","FETCH_MOVIE","SET_MOVIE","POST_REVIEW","submitLogin","data","env","runtimeEnv","dispatch","fetch","concat","REACT_APP_API_URL","method","headers","Accept","Content-Type","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","username","localStorage","setItem","token","type","catch","e","console","log","logoutUser","removeItem","MovieHeader","this","props","react_default","a","createElement","Navbar","Header","Brand","Nav","lib","to","NavItem","eventKey","disabled","loggedIn","selectedMovie","_id","onClick","logout","bind","className","title","Component","withRouter","connect","state","auth","movie","setMovie","movieSet","fetchMovies","Authorization","getItem","movies","fetchMovie","Movie_title","MovieList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","handleSelect","assertThisInitialized","selectedIndex","_this2","MovieListCarousel","_ref","movieList","Carousel","onSelect","map","Item","key","Image","src","imageUrl","thumbnail","Caption","Glyphicon","glyph","avgRating","year","submitReview","review","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","Movie","updateReviewDetails","postReview","details","movieTitle","reviewer","quote","rating","event","assign","target","id","value","setState","history","movieId","_this3","ActorInfo","actorsName","actor","i","actorName","characterName","ReviewInfo","_ref2","reviews","ReviewForm","_ref3","currentMovie","Form","horizontal","FormGroup","controlId","Col","componentClass","ControlLabel","sm","FormControl","onChange","min","max","placeholder","onLoad","smOffset","Button","DetailInfo","_ref4","Panel","Heading","Body","ListGroup","ListGroupItem","actors","ownProps","match","params","Login","updateDetails","login","password","Register","register","name","submitRegister","Authentication","toggleReg","userNotLoggedIn","showLogin","showReg","components_register","components_login","userLoggedIn","initialState","middlewares","thunk","store","createStore","combineReducers","arguments","length","undefined","action","updated","constants","applyMiddleware","apply","App","es","react_router_dom","movieheader","react_router","exact","path","render","movielist","components_movie","authentication","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9373a1f3.chunk.js","sourcesContent":["export default  {\n    USER_LOGGEDIN: 'USER_LOGGEDIN',\n    USER_LOGOUT: 'USER_LOGOUT',\n    FETCH_MOVIES: 'FETCH_MOVIES',\n    FETCH_MOVIE: 'FETCH_MOVIE',\n    SET_MOVIE: 'SET_MOVIE',\n    POST_REVIEW: 'POST_REVIEW'\n}\n","import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nfunction userLoggedIn(username) {\n    return {\n        type: actionTypes.USER_LOGGEDIN,\n        username: username\n    }\n}\n\nfunction logout() {\n    return {\n        type: actionTypes.USER_LOGOUT\n    }\n}\n\nexport function submitLogin(data) {\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/signin`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'\n        }).then((response) => {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json()\n\n        })\n            .then((res) => {\n            localStorage.setItem('username', data.username);\n            localStorage.setItem('token', res.token);\n\n            dispatch(userLoggedIn(data.username));\n        })\n            .catch((e) => console.log(e));\n    }\n}\n\nexport function submitRegister(data) {\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/signup`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'\n        }).then((response) => {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json()\n        }).then((res) => {\n            dispatch(submitLogin(data));\n        }).catch((e) => console.log(e));\n    }\n}\n\nexport function logoutUser() {\n    return dispatch => {\n        localStorage.removeItem('username');\n        localStorage.removeItem('token');\n        dispatch(logout())\n    }\n}","import React, { Component } from 'react';\nimport {Navbar, NavItem, Nav} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {connect} from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {logoutUser} from \"../actions/authActions\";\n\nclass MovieHeader extends Component {\n\n    logout(){\n        this.props.dispatch(logoutUser());\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar>\n                    <Navbar.Header>\n                        <Navbar.Brand>\n                            Movie App\n                        </Navbar.Brand>\n                    </Navbar.Header>\n                    <Nav>\n                        <LinkContainer to=\"/movielist\">\n                            <NavItem eventKey={1} disabled={!this.props.loggedIn}>Movie List </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to={'/movie/'+ (this.props.selectedMovie ? this.props.selectedMovie._id : '')}>\n                            <NavItem eventKey={2} disabled={!this.props.loggedIn}>Movie Detail</NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/signin\">\n                            <NavItem eventKey={3}>{this.props.loggedIn ? <button onClick={this.logout.bind(this)}>Logout</button> : 'Login'}</NavItem>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar>\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\">{(this.props.selectedMovie ? this.props.selectedMovie.title : '')}</h1>\n                </header>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.auth.loggedIn,\n        username: state.auth.username,\n        selectedMovie: state.movie.selectedMovie,\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(MovieHeader));","import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\n\nfunction moviesFetched(movies){\n    return {\n        type: actionTypes.FETCH_MOVIES,\n        movies: movies\n    }\n}\n\nfunction movieFetched(movie){\n    return {\n        type: actionTypes.FETCH_MOVIE,\n        selectedMovie: movie\n    }\n}\n\nfunction movieSet(movie){\n    return {\n        type: actionTypes.SET_MOVIE,\n        selectedMovie: movie\n    }\n}\n\nexport function setMovie(movie) {\n    return dispatch => {\n        dispatch(movieSet(movie));\n    }\n}\n\nexport function fetchMovies(){\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/movies?reviews=true`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n                dispatch(moviesFetched(res));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}\n\nexport function fetchMovie(Movie_title){\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/movies/${Movie_title}?reviews=true`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n                dispatch(movieFetched(res));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}","import React, { Component } from 'react';\nimport { fetchMovies } from '../actions/movieActions';\nimport { setMovie } from '../actions/movieActions';\nimport {connect} from \"react-redux\";\nimport { Image } from 'react-bootstrap'\nimport { Carousel } from 'react-bootstrap'\nimport { Glyphicon } from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap';\n\n//require a callback function to be sent to MovieList to update the header subtitle\n\nclass MovieList extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    componentDidMount() {\n        const {dispatch} = this.props;\n        dispatch(fetchMovies());\n    }\n\n    handleSelect(selectedIndex, e) {\n        const {dispatch} = this.props;\n        dispatch(setMovie(this.props.movies[selectedIndex]));\n    }\n\n    handleClick = (movie) => {\n        const {dispatch} = this.props;\n        dispatch(setMovie(movie));\n    }\n\n    render() {\n\n        const MovieListCarousel= ({movieList}) => {\n            if (!movieList) { // evaluates to true if currentMovie is null\n                return <div>Loading...</div>;\n            }\n\n            return (\n                <Carousel onSelect={this.handleSelect}>\n                    {movieList.map((movie) =>\n                        <Carousel.Item key={movie.title}>\n                            <div>\n                                <LinkContainer to={'/movie/'+movie.title} onClick={()=>this.handleClick(movie)}>\n                                    <Image className=\"image\" src={movie.imageUrl} thumbnail />\n                                </LinkContainer>\n                            </div>\n                            <Carousel.Caption>\n                                <h3>{movie.title}</h3>\n                                <Glyphicon glyph={'star'} /> {movie.avgRating} &nbsp;&nbsp; {movie.year}\n                            </Carousel.Caption>\n                        </Carousel.Item>)}\n                </Carousel>);\n        }\n\n        return (\n            <MovieListCarousel movieList={this.props.movies} />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.movie.movies\n    }\n}\n\nexport default connect(mapStateToProps)(MovieList);","import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\n\n\nfunction reviewPosted(review){\n    return {\n        type: actionTypes.POST_REVIEW,\n        review: review\n    }\n}\n\nexport function submitReview(review){\n    const env = runtimeEnv();\n    var formBody = [];\n    for(var property in review)\n    {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(review[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/reviews`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: formBody,\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n                dispatch(reviewPosted(res));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}","import React, { Component }  from 'react';\nimport {connect} from \"react-redux\";\nimport {Col, Form, FormGroup, FormControl, ControlLabel, Button, Glyphicon, Panel, ListGroup, ListGroupItem} from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\nimport { withRouter } from \"react-router-dom\";\nimport {fetchMovie} from \"../actions/movieActions\";\nimport { submitReview } from \"../actions/reviewActions\";\n\n//support routing by creating a new component\n\nclass Movie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.updateReviewDetails = this.updateReviewDetails.bind(this);\n        this.postReview = this.postReview.bind(this);\n\n        this.state = {\n            details:{\n                movieTitle: this.props.selectedMovie.title,\n                reviewer: localStorage.getItem(\"username\"),\n                quote: '',\n                rating:0\n            }\n        };\n    }\n\n    updateReviewDetails(event){\n        let updateReviewDetails = Object.assign({}, this.state.details);\n\n        updateReviewDetails[event.target.id] = event.target.value;\n        this.setState({\n            details: updateReviewDetails\n        });\n    }\n\n    postReview() {\n        const {dispatch} = this.props;\n        dispatch(submitReview(this.state.details))\n            .then(\n                ()=>\n                {\n                    this.props.history.push('/');\n                });\n    }\n\n    componentDidMount() {\n        const {dispatch} = this.props;\n        if (this.props.selectedMovie == null)\n            dispatch(fetchMovie(this.props.movieId));\n    }\n\n    render() {\n        const ActorInfo = ({actorsName}) => {\n            return actorsName.map((actor, i) =>\n                <p key={i}>\n                    <b>{actor.actorName}</b> {actor.characterName}\n                </p>\n            )\n        }\n\n        const ReviewInfo = ({reviews}) => {\n            return reviews.map((review, i) =>\n                <p key={i}>\n                    <b>{review.username}</b> {review.review} &nbsp;&nbsp;&nbsp;\n                    <Glyphicon glyph={'star'} /> {review.rating}\n                </p>\n            )\n        }\n\n        const ReviewForm = ({currentMovie}) => {\n            return (\n                <Form horizontal key=\"reviewForm\">\n                    <FormGroup controlId=\"rating\" key=\"ratingFormGroup\">\n                        <Col componentClass={ControlLabel} sm={3}>\n                            Rating (0-5)\n                        </Col>\n                        <Col sm={9}>\n                            <FormControl key=\"ratingFormControl\" onChange={this.updateReviewDetails} value={this.state.details.rating} type=\"Number\" min=\"0\" max=\"5\" />\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup controlId=\"quote\">\n                        <Col componentClass={ControlLabel} sm={3}>\n                            Comment\n                        </Col>\n                        <Col sm={9}>\n                            <FormControl onChange={this.updateReviewDetails} value={this.state.details.quote} type=\"text\" placeholder=\"Your Thoughts...\" />\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup controlId=\"movieTitle\">\n                        <FormControl type=\"hidden\" value={currentMovie.title} onLoad={this.updateReviewDetails} />\n                    </FormGroup>\n\n                    <FormGroup controlId=\"reviewer\">\n                        <FormControl type=\"hidden\" value={localStorage.getItem(\"username\")} onLoad={this.updateReviewDetails} />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Col smOffset={2} sm={10}>\n                            <Button onClick={this.postReview}>Post Review</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            );\n        }\n\n        const DetailInfo = ({currentMovie}) => {\n            if (!currentMovie) { // evaluates to true if currentMovie is null\n                return <div>Loading...</div>;\n            }\n            return (\n                <Panel>\n                    <Panel.Heading key=\"movieDetailHeading\">Movie Detail</Panel.Heading>\n                    <Panel.Body key=\"movieImage\"><Image className=\"image\" src={currentMovie.imageUrl} thumbnail /></Panel.Body>\n                    <ListGroup key=\"movieDetailList\">\n                        <ListGroupItem>{currentMovie.title}</ListGroupItem>\n                        <ListGroupItem><ActorInfo actors={currentMovie.actors} /></ListGroupItem>\n                        <ListGroupItem><h4><Glyphicon glyph={'star'} /> {currentMovie.avgRating} </h4></ListGroupItem>\n                    </ListGroup>\n                    <Panel.Body><ReviewInfo reviews={currentMovie.reviews} /></Panel.Body>\n                </Panel>\n            );\n        }\n        return (\n            <div>\n                <DetailInfo currentMovie={this.props.selectedMovie} />\n                <ReviewForm currentMovie={this.props.selectedMovie} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(ownProps);\n    return {\n        selectedMovie: state.movie.selectedMovie,\n        title: ownProps.match.params.title\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Movie));\n\n","import React, { Component } from 'react';\nimport { submitLogin } from '../actions/authActions';\nimport { connect } from 'react-redux';\nimport {Col, Form, FormGroup, FormControl, Button, ControlLabel} from 'react-bootstrap';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.updateDetails = this.updateDetails.bind(this);\n        this.login = this.login.bind(this);\n\n        this.state = {\n            details:{\n                username: '',\n                password: ''\n            }\n        };\n    }\n\n    updateDetails(event){\n        let updateDetails = Object.assign({}, this.state.details);\n\n        updateDetails[event.target.id] = event.target.value;\n        this.setState({\n            details: updateDetails\n        });\n    }\n\n    login() {\n        const {dispatch} = this.props;\n        dispatch(submitLogin(this.state.details));\n    }\n\n    render(){\n        return (\n            <Form horizontal>\n                <FormGroup controlId=\"username\">\n                    <Col componentClass={ControlLabel} sm={2}>\n                        Email\n                    </Col>\n                    <Col sm={10}>\n                        <FormControl onChange={this.updateDetails} value={this.state.details.username} type=\"email\" placeholder=\"Email\" />\n                    </Col>\n                </FormGroup>\n\n                <FormGroup controlId=\"password\">\n                    <Col componentClass={ControlLabel} sm={2}>\n                        Password\n                    </Col>\n                    <Col sm={10}>\n                        <FormControl onChange={this.updateDetails} value={this.state.details.password} type=\"password\" placeholder=\"Password\" />\n                    </Col>\n                </FormGroup>\n\n                <FormGroup>\n                    <Col smOffset={2} sm={10}>\n                        <Button onClick={this.login}>Sign in</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps)(Login);","import React, { Component} from 'react';\nimport { submitRegister } from '../actions/authActions';\nimport { connect } from 'react-redux';\nimport { Col, Form, FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap';\n\nclass Register extends Component {\n\n    constructor(){\n        super();\n\n        this.updateDetails = this.updateDetails.bind(this);\n        this.register = this.register.bind(this);\n        this.state = {\n            details:{\n                name: '',\n                username: '',\n                password: ''\n            }\n        };\n    }\n\n    updateDetails(event){\n        let updateDetails = Object.assign({}, this.state.details);\n\n        updateDetails[event.target.id] = event.target.value;\n        this.setState({\n            details: updateDetails\n        });\n    }\n\n    register(){\n        const {dispatch} = this.props;\n        dispatch(submitRegister(this.state.details));\n    }\n\n    render(){\n        return (\n            <Form horizontal>\n                <FormGroup controlId=\"name\">\n                    <Col componentClass={ControlLabel} sm={2}>\n                        Email\n                    </Col>\n                    <Col sm={10}>\n                        <FormControl onChange={this.updateDetails} value={this.state.details.name} type=\"text\" placeholder=\"Name\" />\n                    </Col>\n                </FormGroup>\n\n                <FormGroup controlId=\"username\">\n                    <Col componentClass={ControlLabel} sm={2}>\n                        Email\n                    </Col>\n                    <Col sm={10}>\n                        <FormControl onChange={this.updateDetails} value={this.state.details.username} type=\"text\" placeholder=\"Username\" />\n                    </Col>\n                </FormGroup>\n\n                <FormGroup controlId=\"password\">\n                    <Col componentClass={ControlLabel} sm={2}>\n                        Password\n                    </Col>\n                    <Col sm={10}>\n                        <FormControl onChange={this.updateDetails} value={this.state.details.password} type=\"password\" placeholder=\"Password\" />\n                    </Col>\n                </FormGroup>\n\n                <FormGroup>\n                    <Col smOffset={2} sm={10}>\n                        <Button onClick={this.register}>Register</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps)(Register);","import React, { Component} from 'react';\nimport { connect } from 'react-redux'\nimport Login from './login';\nimport Register from './register';\nimport { logoutUser } from '../actions/authActions';\n\nclass Authentication extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            toggleReg: false\n        };\n    }\n\n    componentDidMount(){\n\n    }\n\n    showLogin(){\n        this.setState({\n            toggleReg: false\n        });\n    }\n\n    showReg(){\n        this.setState({\n            toggleReg: true\n        });\n    }\n\n    logout(){\n        this.props.dispatch(logoutUser());\n    }\n\n    render(){\n\n        const userNotLoggedIn = (\n            <div>\n                <button onClick={this.showLogin.bind(this)}>Login</button><button onClick={this.showReg.bind(this)}>Register</button>\n                { this.state.toggleReg ? <Register /> : <Login /> }\n            </div>\n        );\n        const userLoggedIn = (<div>Logged in as: {this.props.username} <button onClick={this.logout.bind(this)}>Logout</button></div>);\n\n        return (\n            <div>\n                {this.props.loggedIn ? userLoggedIn : userNotLoggedIn}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.auth.loggedIn,\n        username: state.auth.username\n    }\n}\n\nexport default connect(mapStateToProps)(Authentication)","import constants from '../constants/actionTypes'\n\nlet initialState = {\n    loggedIn: localStorage.getItem('token') ? true : false,\n    username: localStorage.getItem('username') ? localStorage.getItem('username') : ''\n}\n\nexport default  (state = initialState, action) => {\n\n    const updated = Object.assign({}, state);\n\n    switch (action.type) {\n        case constants.USER_LOGGEDIN:\n            updated['loggedIn'] = true;\n            updated['username'] = action.username;\n            return updated;\n\n        case constants.USER_LOGOUT:\n            updated['loggedIn'] = false;\n            updated['username'] = '';\n            return updated;\n\n        default:\n            return state;\n    }\n}\n\n","import constants from '../constants/actionTypes'\n\nlet initialState = {\n      movies: [],\n      selectedMovie: null\n}\n\nexport default (state = initialState, action) => {\n\n      let updated = Object.assign({}, state);\n\n      switch(action.type) {\n            case constants.FETCH_MOVIES:\n                  updated['movies'] = action.movies;\n                  updated['selectedMovie'] = action.movies[0];\n                  return updated;\n            case constants.SET_MOVIE:\n                  updated['selectedMovie'] = action.selectedMovie;\n                  return updated;\n            case constants.FETCH_MOVIE:\n                  updated['selectedMovie'] = action.selectedMovie;\n                  return updated;\n            default:\n                  return state;\n      }\n}\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from \"../reducers/authReducer\";\nimport movieReducer from \"../reducers/movieReducer\";\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    const { logger } = require('redux-logger');\n\n    middlewares.push(logger);\n}\n\nconst store = createStore(\n    combineReducers( {\n        auth: authReducer,\n        movie: movieReducer\n    }),\n    applyMiddleware(\n        ...middlewares\n    )\n);\n\nexport default store;","import React, {Component} from 'react';\nimport './App.css';\nimport MovieHeader from './components/movieheader';\nimport MovieList from './components/movielist';\nimport Movie from './components/movie';\nimport Authentication from './components/authentication';\nimport {HashRouter, Route} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './stores/store';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Provider store={store}>\n            <HashRouter>\n              <div>\n                <MovieHeader />\n                <Route exact path=\"/\" render={()=><MovieList />}/>\n                <Route path=\"/movielist\" render={()=><MovieList />}/>\n                <Route path=\"/movie/:Movie_title\" render={()=><Movie />}/>\n                <Route path=\"/signin\" render={()=><Authentication />}/>\n              </div>\n            </HashRouter>\n          </Provider>\n        </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker.unregister();"],"sourceRoot":""}